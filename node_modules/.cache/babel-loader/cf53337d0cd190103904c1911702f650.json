{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/reactjs/my-app/src/Login.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Redirect, Route, NavLink, useRouteMatch, Link } from \"react-router-dom\";\nimport useForm from \"react-hook-form\";\nimport \"./css/demo.css\";\nimport \"./css/style.css\";\nimport \"./css/animate-custom.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\nexport default function Login() {\n  const _useForm = useForm(),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        watch = _useForm.watch,\n        errors = _useForm.errors,\n        reset = _useForm.reset,\n        setValue = _useForm.setValue;\n\n  const clearFormData = () => {\n    setValue(\"email_address\", \"\");\n    setValue(\"password\", \"\");\n  };\n\n  const onSubmit = reqdata => {\n    /*console.log(data);*/\n    const formData = new FormData();\n    formData.append(\"action\", \"register\");\n    formData.append(\"email_address\", reqdata.email_address);\n    formData.append(\"password\", reqdata.password);\n    axios({\n      url: \"http://localhost/api/register.php\",\n      method: \"post\",\n      data: formData\n    }).then(response => {\n      if (response.data.status) {\n        clearFormData();\n        toast(response.data.message, {\n          type: toast.TYPE.SUCCESS\n        });\n      } else {\n        toast(response.data.message, {\n          type: toast.TYPE.ERROR\n        });\n      }\n      /*console.log(response.data.message);\n      console.log(response.status);\n      console.log(response.headers);\n      console.log(response.config);*/\n\n    }, error => {\n      console.log(error);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(ToastContainer, {\n    position: \"top-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    newestOnTop: false,\n    closeOnClick: true,\n    rtl: false,\n    pauseOnVisibilityChange: true,\n    draggable: true,\n    pauseOnHover: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(ToastContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"container_demo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"register\",\n    className: \"animate form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \" Login \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email_address\",\n    className: \"youmail\",\n    \"data-icon\": \"e\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    id: \"email_address\",\n    name: \"email_address\",\n    type: \"text\",\n    placeholder: \"Enter your email\",\n    ref: register({\n      required: true,\n      pattern: /^\\S+@\\S+$/i\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), errors.email_address && errors.email_address.type === \"required\" && React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Email is required\"), errors.email_address && errors.email_address.type === \"pattern\" && React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Email is not valid\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    className: \"youpasswd\",\n    \"data-icon\": \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"password\", \" \"), React.createElement(\"input\", {\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"eg. X8df!90EO\",\n    ref: register({\n      required: true,\n      minLength: 6,\n      maxLength: 20\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), errors.password && errors.password.type === \"required\" && React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Password is required\"), errors.password && errors.password.type === \"minLength\" && React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Password is at least 6 characters\"), errors.password && errors.password.type === \"maxLength\" && React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Password is not more than 20 characters\")), React.createElement(\"p\", {\n    className: \"signin button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: \"change_link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Not a member ?\", React.createElement(Link, {\n    to: \"/signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Go and sign up \"))))))));\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/reactjs/my-app/src/Login.js"],"names":["React","BrowserRouter","Router","Switch","Redirect","Route","NavLink","useRouteMatch","Link","useForm","ToastContainer","toast","axios","Login","register","handleSubmit","watch","errors","reset","setValue","clearFormData","onSubmit","reqdata","formData","FormData","append","email_address","password","url","method","data","then","response","status","message","type","TYPE","SUCCESS","ERROR","error","console","log","required","pattern","minLength","maxLength"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n  Route,\n  NavLink,\n  useRouteMatch,\n  Link\n} from \"react-router-dom\";\nimport useForm from \"react-hook-form\";\nimport \"./css/demo.css\";\nimport \"./css/style.css\";\nimport \"./css/animate-custom.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\n\nexport default function Login() {\n  const { register, handleSubmit, watch, errors, reset, setValue } = useForm();\n\n  const clearFormData = () => {\n    setValue(\"email_address\", \"\");\n    setValue(\"password\", \"\");\n  };\n\n  const onSubmit = reqdata => {\n    /*console.log(data);*/\n    const formData = new FormData();\n    formData.append(\"action\", \"register\");\n    formData.append(\"email_address\", reqdata.email_address);\n    formData.append(\"password\", reqdata.password);\n    axios({\n      url: \"http://localhost/api/register.php\",\n      method: \"post\",\n      data: formData\n    }).then(\n      response => {\n        if (response.data.status) {\n          clearFormData();\n          toast(response.data.message, {\n            type: toast.TYPE.SUCCESS\n          });\n        } else {\n          toast(response.data.message, {\n            type: toast.TYPE.ERROR\n          });\n        }\n        /*console.log(response.data.message);\n        console.log(response.status);\n        console.log(response.headers);\n        console.log(response.config);*/\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnVisibilityChange\n        draggable\n        pauseOnHover\n      />\n      {/* Same as */}\n      <ToastContainer />\n      <section>\n        <div id=\"container_demo\">\n          <div id=\"wrapper\">\n            <div id=\"register\" className=\"animate form\">\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <h1> Login </h1>\n                <p>\n                  <label\n                    htmlFor=\"email_address\"\n                    className=\"youmail\"\n                    data-icon=\"e\"\n                  >\n                    Email\n                  </label>\n                  <input\n                    id=\"email_address\"\n                    name=\"email_address\"\n                    type=\"text\"\n                    placeholder=\"Enter your email\"\n                    ref={register({ required: true, pattern: /^\\S+@\\S+$/i })}\n                  />\n                  {errors.email_address &&\n                    errors.email_address.type === \"required\" && (\n                      <span className=\"error\">Email is required</span>\n                    )}\n                  {errors.email_address &&\n                    errors.email_address.type === \"pattern\" && (\n                      <span className=\"error\">Email is not valid</span>\n                    )}\n                </p>\n                <p>\n                  <label htmlFor=\"password\" className=\"youpasswd\" data-icon=\"p\">\n                    password{\" \"}\n                  </label>\n                  <input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"eg. X8df!90EO\"\n                    ref={register({\n                      required: true,\n                      minLength: 6,\n                      maxLength: 20\n                    })}\n                  />\n                  {errors.password && errors.password.type === \"required\" && (\n                    <span className=\"error\">Password is required</span>\n                  )}\n                  {errors.password && errors.password.type === \"minLength\" && (\n                    <span className=\"error\">\n                      Password is at least 6 characters\n                    </span>\n                  )}\n                  {errors.password && errors.password.type === \"maxLength\" && (\n                    <span className=\"error\">\n                      Password is not more than 20 characters\n                    </span>\n                  )}\n                </p>\n                <p className=\"signin button\">\n                  <input type=\"submit\" value=\"Login\" />\n                </p>\n                <p className=\"change_link\">\n                  Not a member ?<Link to=\"/signup\">Go and sign up </Link>\n                </p>\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}