{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/reactjs/my-app/src/Login.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Redirect, Route, NavLink, useRouteMatch, Link } from \"react-router-dom\";\nimport useForm from \"react-hook-form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\nimport { checkUserLoggedIn } from './Utils.js';\nimport { Helmet } from \"react-helmet\";\nexport default function Login() {\n  const _useForm = useForm(),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        watch = _useForm.watch,\n        errors = _useForm.errors,\n        reset = _useForm.reset,\n        setValue = _useForm.setValue;\n\n  const clearFormData = () => {\n    setValue(\"email_address\", \"\");\n    setValue(\"password\", \"\");\n  };\n\n  const onSubmit = reqdata => {\n    /*console.log(data);*/\n    const formData = new FormData();\n    formData.append(\"action\", \"login\");\n    formData.append(\"email_address\", reqdata.email_address);\n    formData.append(\"password\", reqdata.password);\n    axios({\n      url: \"http://192.168.100.7/api/register.php\",\n      method: \"post\",\n      data: formData\n    }).then(response => {\n      if (response.data.status) {\n        localStorage.setItem('auth_token', response.data.data.auth_token);\n        clearFormData();\n        toast(response.data.message, {\n          type: toast.TYPE.SUCCESS\n        });\n        window.location.href = '/list';\n      } else {\n        toast(response.data.message, {\n          type: toast.TYPE.ERROR\n        });\n      }\n      /*console.log(response.data.message);\n      console.log(response.status);\n      console.log(response.headers);\n      console.log(response.config);*/\n\n    }, error => {\n      console.log(error);\n    });\n  };\n\n  if (checkUserLoggedIn()) {\n    return React.createElement(Redirect, {\n      to: \"/list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Helmet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"meta\", {\n    charSet: \"utf-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"meta\", {\n    name: \"keywords\",\n    content: \"Login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"meta\", {\n    name: \"description\",\n    content: \"Login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(ToastContainer, {\n    position: \"top-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    newestOnTop: false,\n    closeOnClick: true,\n    rtl: false,\n    pauseOnVisibilityChange: true,\n    draggable: true,\n    pauseOnHover: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(ToastContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"container_demo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"register\",\n    className: \"animate form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \" Login \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email_address\",\n    className: \"youmail\",\n    \"data-icon\": \"e\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    id: \"email_address\",\n    name: \"email_address\",\n    type: \"text\",\n    placeholder: \"Enter your email\",\n    ref: register({\n      required: true,\n      pattern: /^\\S+@\\S+$/i\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), errors.email_address && errors.email_address.type === \"required\" && React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Email is required\"), errors.email_address && errors.email_address.type === \"pattern\" && React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Email is not valid\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    className: \"youpasswd\",\n    \"data-icon\": \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"eg. X8df!90EO\",\n    ref: register({\n      required: true,\n      minLength: 6,\n      maxLength: 20\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), errors.password && errors.password.type === \"required\" && React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Password is required\"), errors.password && errors.password.type === \"minLength\" && React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Password is at least 6 characters\"), errors.password && errors.password.type === \"maxLength\" && React.createElement(\"span\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Password is not more than 20 characters\")), React.createElement(\"p\", {\n    className: \"signin button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: \"change_link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Not a member ?\", React.createElement(Link, {\n    to: \"/signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Go and sign up \"))))))));\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/reactjs/my-app/src/Login.js"],"names":["React","BrowserRouter","Router","Switch","Redirect","Route","NavLink","useRouteMatch","Link","useForm","ToastContainer","toast","axios","checkUserLoggedIn","Helmet","Login","register","handleSubmit","watch","errors","reset","setValue","clearFormData","onSubmit","reqdata","formData","FormData","append","email_address","password","url","method","data","then","response","status","localStorage","setItem","auth_token","message","type","TYPE","SUCCESS","window","location","href","ERROR","error","console","log","required","pattern","minLength","maxLength"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n  Route,\n  NavLink,\n  useRouteMatch,\n  Link\n} from \"react-router-dom\";\nimport useForm from \"react-hook-form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\nimport {checkUserLoggedIn} from './Utils.js';\nimport {Helmet} from \"react-helmet\";\n\nexport default function Login() {\t    \n  \n  const { register, handleSubmit, watch, errors, reset, setValue } = useForm();\n\n  const clearFormData = () => {\n    setValue(\"email_address\", \"\");\n    setValue(\"password\", \"\");\n  };\n\n  const onSubmit = reqdata => {\n    /*console.log(data);*/\n    const formData = new FormData();\n    formData.append(\"action\", \"login\");\n    formData.append(\"email_address\", reqdata.email_address);\n    formData.append(\"password\", reqdata.password);\n    axios({\n      url: \"http://192.168.100.7/api/register.php\",\n      method: \"post\",\n      data: formData\n    }).then(\n      response => {\n        if (response.data.status) {\n          localStorage.setItem('auth_token', response.data.data.auth_token);\n          clearFormData();\n          toast(response.data.message, {\n            type: toast.TYPE.SUCCESS\n          });\n          window.location.href = '/list';\n        } else {\n          toast(response.data.message, {\n            type: toast.TYPE.ERROR\n          });\n        }\n        /*console.log(response.data.message);\n        console.log(response.status);\n        console.log(response.headers);\n        console.log(response.config);*/\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  };\n\n  if(checkUserLoggedIn()){\n    return <Redirect to='/list' />\n  }\t\n\n  return (\n    <div className=\"container\">\n\t\t\t\t\t<Helmet>\n\t\t\t\t\t\t<meta charSet=\"utf-8\" />\n\t\t\t\t\t\t<title>Login</title>\n\t\t\t\t\t\t<meta name=\"keywords\" content=\"Login\" />\n\t\t\t\t\t\t<meta name=\"description\" content=\"Login\" />\n\t\t\t\t\t</Helmet>      \n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnVisibilityChange\n        draggable\n        pauseOnHover\n      />\n      {/* Same as */}\n      <ToastContainer />\n      <section>\n        <div id=\"container_demo\">\n          <div id=\"wrapper\">\n            <div id=\"register\" className=\"animate form\">\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <h1> Login </h1>\n                <p>\n                  <label\n                    htmlFor=\"email_address\"\n                    className=\"youmail\"\n                    data-icon=\"e\"\n                  >\n                    Email\n                  </label>\n                  <input\n                    id=\"email_address\"\n                    name=\"email_address\"\n                    type=\"text\"\n                    placeholder=\"Enter your email\"\n                    ref={register({ required: true, pattern: /^\\S+@\\S+$/i })}\n                  />\n                  {errors.email_address &&\n                    errors.email_address.type === \"required\" && (\n                      <span className=\"error\">Email is required</span>\n                    )}\n                  {errors.email_address &&\n                    errors.email_address.type === \"pattern\" && (\n                      <span className=\"error\">Email is not valid</span>\n                    )}\n                </p>\n                <p>\n                  <label htmlFor=\"password\" className=\"youpasswd\" data-icon=\"p\">\n                    Password\n                  </label>\n                  <input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"eg. X8df!90EO\"\n                    ref={register({\n                      required: true,\n                      minLength: 6,\n                      maxLength: 20\n                    })}\n                  />\n                  {errors.password && errors.password.type === \"required\" && (\n                    <span className=\"error\">Password is required</span>\n                  )}\n                  {errors.password && errors.password.type === \"minLength\" && (\n                    <span className=\"error\">\n                      Password is at least 6 characters\n                    </span>\n                  )}\n                  {errors.password && errors.password.type === \"maxLength\" && (\n                    <span className=\"error\">\n                      Password is not more than 20 characters\n                    </span>\n                  )}\n                </p>\n                <p className=\"signin button\">\n                  <input type=\"submit\" value=\"Login\" />\n                </p>\n                <p className=\"change_link\">\n                  Not a member ?<Link to=\"/signup\">Go and sign up </Link>\n                </p>\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}